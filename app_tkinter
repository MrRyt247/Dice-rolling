import tkinter as tk
from tkinter import font
import random

class DiceSimulator:
    def __init__(self, width, height):
        self.width = width
        self.height = height
        
        self.dice_size = 50  # Adjusted size to 50px
        self.dice_spacing = 20
        self.previous_rolls = []
        self.roll_again = False
        self.roll_start_time = 0
        
        self.num_dice = 0
        self.num_faces = 0

        self.root = tk.Tk()
        self.root.title("Dice Rolling Simulator")
        self.canvas = tk.Canvas(self.root, width=width, height=height, bg="green")
        self.canvas.pack(padx=20, pady=20)

        # Colors
        self.BLACK = "black"
        self.GREEN = "green"
        self.WHITE = "white"

        # Fonts
        self.font = font.Font(family="Helvetica", size=14)

        # Text inputs
        self.dice_input_text = "2"
        self.faces_input_text = "6"
        
        self.create_widgets()

    def create_widgets(self):
        self.dice_label = self.canvas.create_text(20, 50, anchor="nw", text="Number of Dice:", fill=self.WHITE, font=self.font)
        self.faces_label = self.canvas.create_text(20, 20, anchor="nw", text="Number of Faces:", fill=self.WHITE, font=self.font)

        self.dice_entry = tk.Entry(self.root, font=self.font)
        self.faces_entry = tk.Entry(self.root, font=self.font)
        self.dice_entry.insert(0, self.dice_input_text)
        self.faces_entry.insert(0, self.faces_input_text)
        self.canvas.create_window(150, 50, window=self.dice_entry, anchor="nw")
        self.canvas.create_window(150, 20, window=self.faces_entry, anchor="nw")

        self.roll_button = tk.Button(self.root, text="Roll", font=self.font, command=self.roll_dice)
        self.canvas.create_window(300, 35, window=self.roll_button, anchor="nw")

    def draw_dice(self, x, y, value):
        dice_image = tk.PhotoImage(file=f'src/assets/dice{value}.png')
        dice_image = dice_image.subsample(2)  # Shrink image by 2x
        self.canvas.create_image(x, y, image=dice_image, anchor="nw")
        self.root.dice_image = dice_image  # Keep a reference to avoid garbage collection

    def draw_previous_rolls(self):
        if not self.previous_rolls:
            return
        total_width = len(self.previous_rolls) * (self.dice_size + self.dice_spacing) - self.dice_spacing
        start_x = (self.width - total_width) / 2
        y = 150
        for roll in self.previous_rolls:
            self.draw_dice(start_x, y, roll)
            start_x += self.dice_size + self.dice_spacing

    def draw_inputs(self):
        # Draw text inputs
        self.canvas.itemconfigure(self.dice_label, text="Number of Dice:")
        self.canvas.itemconfigure(self.faces_label, text="Number of Faces:")
        self.dice_entry.delete(0, tk.END)
        self.faces_entry.delete(0, tk.END)
        self.dice_entry.insert(0, self.dice_input_text)
        self.faces_entry.insert(0, self.faces_input_text)

    def draw(self):
        self.canvas.delete("all")

        self.draw_inputs()
        
        # Draw buttons
        self.canvas.create_text(300, 35, anchor="nw", text="Roll", fill=self.WHITE, font=self.font)

        # Draw dice
        self.draw_previous_rolls()

    def roll_dice(self):
        self.dice_input_text = self.dice_entry.get()
        self.faces_input_text = self.faces_entry.get()

        if self.dice_input_text and self.faces_input_text:
            self.num_dice = int(self.dice_input_text)
            self.num_faces = int(self.faces_input_text)
            self.previous_rolls.clear()
            self.roll_start_time = self.root.after(100, self.roll_dice_helper)

    def roll_dice_helper(self):
        for _ in range(self.num_dice):
            roll = random.randint(1, self.num_faces)
            self.previous_rolls.append(roll)
        self.draw()

    def run(self):
        self.root.mainloop()

if __name__ == "__main__":
    simulator = DiceSimulator(800, 400)
    simulator.run()
